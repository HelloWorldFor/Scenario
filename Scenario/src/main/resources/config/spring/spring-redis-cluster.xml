<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	

	
	<!--  context:component-scan base-package="org.bridge.redis"/-->
	
	<!--通过构造方法注入RedisNode -->

	<bean id="clusterRedisNodes1" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="${address1}" />
		<constructor-arg value="${port1}" type="int" />
	</bean>
	<bean id="clusterRedisNodes2" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="${address2}" />
		<constructor-arg value="${port2}" type="int" />
	</bean>
	<bean id="clusterRedisNodes3" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="${address3}" />
		<constructor-arg value="${port3}" type="int" />
	</bean>
	<bean id="clusterRedisNodes4" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="${address4}" />
		<constructor-arg value="${port4}" type="int" />
	</bean>
	<bean id="clusterRedisNodes5" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="${address5}" />
		<constructor-arg value="${port5}" type="int" />
	</bean>
	<bean id="clusterRedisNodes6" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="${address6}" />
		<constructor-arg value="${port6}" type="int" />
	</bean>
	

	<!--setter方式注入 RedisClusterConfiguration-->

	<bean id="redisClusterConfiguration"
		class="org.springframework.data.redis.connection.RedisClusterConfiguration">
		<property name="clusterNodes">
			<set>
				<ref bean="clusterRedisNodes1" />
				<ref bean="clusterRedisNodes2" />
				<ref bean="clusterRedisNodes3" />
				<ref bean="clusterRedisNodes4" />
				<ref bean="clusterRedisNodes5" />
				<ref bean="clusterRedisNodes6" />
			</set>
		</property>

		<!--红色所示部分在从gitHub上获取的jar包中无对应setter方法，因此需要修改其对应的源码。 另外，如果不设置clusterTimeOut值，源码中默认为2S。当集群服务器与客户端不在同一服务器上时，容易报：Could 
			not get a resource from the Cluster; 如果不设置maxRedirects值，源码中默认为5。一般当此值设置过大时，容易报：Too 
			many Cluster redirections -->
		<property name="maxRedirects" value="5" />
	</bean>
	
	<!-- 采用RedisCluster集群方式构建JedisConnectionFactory -->
	<bean id="jedisConnFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:use-pool="true">
		<constructor-arg ref="redisClusterConfiguration" />
		<constructor-arg ref="poolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnFactory"  p:valueSerializer-ref="kypoSerialer"
          p:hashValueSerializer-ref="jackson2JsonRedisSerializer">
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
        </property>
	</bean>

	<!-- 注：加载lua文件 -->
	<!-- 
	<bean id="XXX"
		class="org.springframework.data.redis.core.script.DefaultRedisScript">
		<property name="location" value="./redis/XXX.lua" />
		<property name="resultType" value="java.lang.Void" />
	</bean>
	 -->
	
		
</beans>